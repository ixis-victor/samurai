<?php
/**
 * @file
 * security_samurai_gitapi.module
 */

$gitapipath = drupal_get_path('module', 'security_samurai_gitapi');
define('SECURITY_SAMURAI_GITAPI_PATH', $gitapipath);

/**
 * Implements hook_entity_info
 */
function security_samurai_gitapi_entity_info() {

  $info = array();

  // The gitinfo entity.
  $info['gitinfo'] = array(
    'label' => t('Git info'),
    'base table' => 'securitysamurai_gitinfo',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'name',
    ),
    'uri callback' => 'entity_class_uri',
    'entity class' => 'Entity',
    'controller class' => 'GitInfoEntityController',
    'module' => 'security_samurai_gitapi',
    // Default views support.
    'views controller class' => 'EntityDefaultViewsController',
  );

  return $info;
}

/**
 * Extends the EntityAPIController class for the 'site' entity type
 *
 * @method object save()
 * @method object buildContent()
 */
class GitInfoEntityController extends EntityAPIController {
  /**
   * Override the default save function to 
   */
  public function save($entity, DatabaseTransaction $transaction = NULL) {

    if (isset($entity->is_new)) {
      $entity->created_at = REQUEST_TIME;
    }
    $entity->updated_at = REQUEST_TIME;
    return parent::save($entity, $transaction);
  }

  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {

    $build = parent::buildContent($entity, $view_mode, $langcode, $content);
    return $build;
  }
}

/**
 * Implements hook_load
 *
 * Menu autoloader for site/%site
 */
function gitinfo_load($id) {

  $site = entity_load('gitinfo', array($id));
  return array_pop($site);
}

/**
 * Implements hook_menu
 */
function security_samurai_gitapi_menu() {

  $items = array();

  // The GitAPI configuration page.
  $items['admin/config/development/gitapi'] = array(
    'title' => 'Git API configuration',
    'description' => 'Configure accounts for connecting private repositories',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('security_samurai_gitapi_admin_config_form'),
    'access arguments' => array('administer samurai gitapi'),
    'file' => 'security_samurai_gitapi.admin.inc',
  );

  // Return menu items
  return $items;
}

/**
 * Implements hook_permission()
 */
function security_samurai_gitapi_permission() {

  return array(
    'administer samurai gitapi' => array(
      'title' => t('Administer security samurai GitAPI'),
      'description' => t('Perform administration tasks for security samurai GitAPI.'),
    ),
  );
}

/**
 * Implements hook_form_alter
 */
function security_samurai_gitapi_form_alter(&$form) {
  
  // Override the client form and add in some extra configuration options.
  if ($form['#form_id'] == 'client_site_form') {
    $gitapi_form = array();

    $gitapi_form['security_samurai_gitapi_fieldset'] = array(
      '#type' => 'fieldset',
      '#title' => t('Git configuration'),
      '#description' => t('Set up git branches, clone URLs and tagging per client here.'),
    );
    $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_service'] = array(
      '#type' => 'select',
      '#title' => t('Service'),
      '#description' => t('The Git service to use.'),
      '#options' => array(
        1 => t('GitHub'),
        2 => t('BitBucket'),
        3 => t('Codebase'),
      ),
    );
    $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_clone_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Clone URL'),
      '#description' => t('The Git URL to the repo containing the site.'),
    );
    $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset'] = array(
      '#type' => 'fieldset',
      '#title' => t('Branching options'),
      '#description' => t('Configure which branches to use and where to push'),
      '#collapsible' => TRUE,
      '#collapse-icon' => '',
      '#collapsed' => TRUE,
      '#prefix' => '<div id="gitapi_wrapper">',
      '#suffix' => '</div>',
      '#attributes' => array(
        'class' => array('flatten'),
      ),
    );
    $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_model'] = array(
      '#type' => 'select',
      '#title' => t('The Git branching model to use'),
      '#description' => t('Determines how branches are created and merged.'),
      '#options' => array(
        1 => t('Please choose an option'),
        2 => t('Git flow'),
        3 => t('Standard DEV -> STAGE -> PROD'),
      ),
      '#ajax' => array(
        'callback' => 'security_samurai_git_branch_model_callback',
        'method' => 'replace',
        'wrapper' => 'gitapi_wrapper',
        'effect' => 'slide',
      ),
    );
    // $gitapi_form['securtity_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_']
    // From here the options will be:
    // - User selects Git flow
    // -- Branch to create a feature branch off of.
    // -- Branch to merge that feature branch to after tests pass.
    // - User selects standard
    // -- User selects dev branch
    // -- User selects stage branch
    // -- User selects prod branch


    $form = array_merge($form, $gitapi_form);
  }
}

/**
 * Ajax callback for alterations to the client_site_form.
 */
function security_samurai_git_branch_model_callback($form, $form_state) {
  variable_set('samurai_debug', $form_state['values']);

  $gitapi_model = $form_state['values']['security_samurai_gitapi_model'];
  $clone_url = $form_state['values']['security_samurai_gitapi_clone_url'];
  $service = $form_state['values']['security_samurai_gitapi_service'];

  $form = array();

  switch ($gitapi_model) {
    case 2:
      $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset'] = array(
        '#type' => 'fieldset',
        '#title' => t('Branching options'),
        '#description' => t('Configure which branches to use and where to push'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#prefix' => '<div id="gitapi_wrapper">',
        '#suffix' => '</div>',
        '#attributes' => array(
          'class' => array('flatten'),
        ),
      );
      $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_model'] = array(
        '#type' => 'select',
        '#title' => t('The Git branching model to use'),
        '#description' => t('Determines how branches are created and merged.'),
        '#options' => array(
          1 => t('Please choose an option'),
          2 => t('Git flow'),
          3 => t('Standard DEV -> STAGE -> PROD'),
        ),
        '#ajax' => array(
          'callback' => 'security_samurai_git_branch_model_callback',
          'method' => 'replace',
          'wrapper' => 'gitapi_wrapper',
          'effect' => 'slide',
        ),
      );
      $form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_test'] = array(
        '#type' => 'markup',
        '#prefix' => '<div id="gitapi_wrapper">',
      );
      break;
    
    case 3:
      $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset'] = array(
        '#type' => 'fieldset',
        '#title' => t('Branching options'),
        '#description' => t('Configure which branches to use and where to push'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#prefix' => '<div id="gitapi_wrapper">',
        '#suffix' => '</div>',
        '#attributes' => array(
          'class' => array('flatten'),
        ),
      );
      $gitapi_form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_model'] = array(
        '#type' => 'select',
        '#title' => t('The Git branching model to use'),
        '#description' => t('Determines how branches are created and merged.'),
        '#options' => array(
          1 => t('Please choose an option'),
          2 => t('Git flow'),
          3 => t('Standard DEV -> STAGE -> PROD'),
        ),
        '#ajax' => array(
          'callback' => 'security_samurai_git_branch_model_callback',
          'method' => 'replace',
          'wrapper' => 'gitapi_wrapper',
          'effect' => 'slide',
        ),
      );
      $form['security_samurai_gitapi_fieldset']['security_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_devbranch'] = array(
        '#type' => 'select',
        '#title' => t('Dev branch'),
        '#options' => array(
          1 => 'Please select one',
          2 => 'Dev',
        ),
      );
      $form['security_samurai_gitapi_fieldset']['securtity_samurai_gitapi_branch_fieldset']['security_samurai_gitapi_stagebranch'] = array(
        '#type' => 'select',
        '#title' => t('Stage branch'),
        '#options' => array(
          1 => 'Please select one',
          2 => 'Stage',
        ),
      );
      break;
  }

  return $form;
}