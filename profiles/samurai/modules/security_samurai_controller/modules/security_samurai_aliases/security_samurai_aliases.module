<?php
/**
 * @file
 * security_samurai_aliases.module
 */

/*
  Retrieving update data in a readable format:
    drush ups --format="json" - depends on drush 6.x +
*/

/**
 * Implements hook_cron()
 */
function security_samurai_aliases_cron() {

  // On run, rebuild the site alias variable

  // - Retrieve the last run timestamp
  // - Retrieve the run interval - default to 12 hours
  $last_run = variable_get('security_samurai_aliases_last_run', 0);
  $run_interval = variable_get('security_samurai_aliases_interval', 43200);

  // Check interval time is correct
  if (REQUEST_TIME <= ($last_run + $run_interval) || $last_run == 0) {

    // - Initalise new SamuraiAliases class
    // - Retrieve the array of aliases
    $s_aliases = new SamuraiAliases();
    $return = $s_aliases->get_all_aliases();

    // Set the Drupal variables
    variable_set('security_samurai_aliases', $return);
    variable_set('security_samurai_aliases_last_run', REQUEST_TIME);
  }
}

/**
 * Dumps a site-alias database and returns the location
 *
 * @param string $alias The site alias
 */
function security_samurai_aliases_dump_database($alias) {

  // Initalise a new SamuraiAliases class
  $s_aliases = new SamuraiAliases();

  // - Create the dump file name
  // - Execute the sql-dump command
  $file_name = str_replace('@', '', $alias) . REQUEST_TIME . '-dump.sql';
  $dump_location = $s_aliases->invoke_process($alias, 'sql-dump', '> /tmp/' . $file_name);

  // Return the dump location
  return $dump_location;
}

/**
 * Check if an alias is present on the server
 * Returns TRUE/FALSE
 *
 * @param string $site_alias The name of the site alias
 */
function security_samurai_aliases_alias_exists($site_alias) {

  // Get the drush aliases variable
  $aliases = variable_get('security_samurai_aliases', NULL);

  if (!is_null($aliases)) {
    foreach ($aliases as $key => $value) {
      if ($value == $aliases) {

        // Alias exists, return TRUE
        return TRUE;
      }
    }
  }

  // Return FALSE, alias does not exist
  return FALSE;
}
